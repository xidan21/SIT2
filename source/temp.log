
R version 3.6.0 (2019-04-26) -- "Planting of a Tree"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R -- это свободное ПО, и оно поставляется безо всяких гарантий.
Вы вольны распространять его при соблюдении некоторых условий.
Введите 'license()' для получения более подробной информации.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Введите 'demo()' для запуска демонстрационных программ, 'help()' -- для
получения справки, 'help.start()' -- для доступа к справке через браузер.
Введите 'q()', чтобы выйти из R.

> #!/usr/bin/R
> 
> library(biomaRt)
> 
> ensembl=useMart("ensembl")
> argv <- commandArgs(trailingOnly=T)
> 
> 
> ensembl = useMart("ensembl",dataset=argv[1])
> 
> filters = listFilters(ensembl)
> 
> attributes = listAttributes(ensembl)
> 
> trans_id = getBM(attributes=c("ensembl_transcript_id","chromosome_name","start_position","end_position","strand"), filters = c('chromosome_name','start','end'),values=list(argv[2],argv[3],argv[4]), mart=ensembl)
> 
> utr5_id = getBM(attributes=c("ensembl_transcript_id","chromosome_name","5_utr_start","5_utr_end","strand"), filters = c('chromosome_name','start','end'),values=list(argv[2],argv[3],argv[4]), mart=ensembl)
> 
> utr3_id = getBM(attributes=c("ensembl_transcript_id","chromosome_name","3_utr_start","3_utr_end","strand"), filters = c('chromosome_name','start','end'),values=list(argv[2],argv[3],argv[4]), mart=ensembl)
> 
> cds_id = getBM(attributes=c("ensembl_transcript_id","chromosome_name","genomic_coding_start","genomic_coding_end","cds_start", "cds_end","strand"), filters = c('chromosome_name','start','end'),values=list(argv[2],argv[3],argv[4]), mart=ensembl)
> 
> #cds_seq = getSequence(chromosome = argv[2], start = argv[3], end  = argv[4],seqType = "cdna", mart = ensembl, type = "ensembl_transcript_id")
> 
> #peptide_seq = getSequence(chromosome = argv[2], start = argv[3], end  = argv[4],seqType = "peptide", mart = ensembl, type = "ensembl_transcript_id")
> 
> utr3_id[,2] <- sub ("^","chr", utr3_id[,2])
> 
> utr3_bed <- data.frame(utr3_id[,c(2,3,4,5,1)])
> 
> utr5_id[,2] <- sub ("^","chr", utr5_id[,2])
> 
> utr5_bed <- data.frame(utr5_id[,c(2,3,4,5,1)])
> 
> cds_id[,2] <- sub ("^","chr", cds_id[,2])
> 
> cds_bed <- data.frame(cds_id[,c(2,3,4,5,6,7,1)])
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> write.table(trans_id,"../source/trans.txt",col.names = FALSE, quote=F)
> 
> write.table(na.omit(utr5_bed),"../source/utr5.bed", row.names = FALSE, col.names = FALSE, quote=F, sep = "\t")
> 
> write.table(na.omit(utr3_bed),"../source/utr3.bed", row.names = FALSE, col.names = FALSE, quote=F, sep = "\t")
> 
> write.table(na.omit(cds_bed),"../source/exon.bed", row.names = FALSE, col.names = FALSE, quote=F, sep = "\t")
> 
> #write.table(cds_seq,"../source/cds_sequence.txt", col.names = FALSE, quote = F)
> 
> #write.table(peptide_seq,"../source/peptide_sequence.txt", col.names = FALSE, quote = F)
> 
